@using PollaEngendrilClientHosted.Client.Services;
@using PollaEngendrilClientHosted.Client.State;
@using PollaEngendrilClientHosted.Shared.Models.ViewModel;
@inject IPredictionApiService predictionApiService
@inject UserState UserState

@if (ShowPredictions)
{
    <table class="table">
        <thead>
            <tr>
                <th>Usuario</th>
                <th>Marcador Predicho</th>
                <th>Puntos Obtenidos</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var prediction in otherPredictions)
            {
                <tr>
                    <td>@prediction.UserName</td>
                    <td>@prediction.HomeTeamPredictedScore - @prediction.AwayTeamPredictedScore</td>
                    <td>@prediction.PointsObtained</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<OtherUserPredictionViewModel> otherPredictions;

    [Parameter]
    public int MatchId { get; set; }

    [Parameter]
    public bool ShowPredictions { get; set; }

    private async Task LoadOtherPredictions()
    {
        if (otherPredictions is null)
            otherPredictions = await predictionApiService.GetOthersPredictionsAsync(MatchId, UserState.UserId.Value);
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadOtherPredictions();
    }

}
