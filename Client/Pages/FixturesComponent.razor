@using PollaEngendrilClientHosted.Client.Services;
@using PollaEngendrilClientHosted.Shared.Models.ViewModel;
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IFixturesApiService fixturesApiService

<AuthorizeView>
    <Authorized>
        <PageTitle>Pronósticos</PageTitle>
        <div class="content">
            <div class="matches">
                <h1 style="outline: none !important;">
                    Eliminatorias Sudamericanas
                </h1>
            </div>
            <div class="matches">
            @if (fixtures != null)
            {
                int matchIndex = 0;
                @foreach (var fixture in fixtures)
                {
                    <div class="match">
                        <p>Fecha: @fixture.Date</p>
                        <p>Hora: @fixture.Time</p>
                            <!-- Pronóstico -->
                            <div class="pronostico">
                                <div class="banderas">
                                        <img src="@fixture.HomeTeamFlag" alt="Bandera de @fixture.HomeTeam" style="margin-left: 20px;">
                                        <img src="@fixture.AwayTeamFlag" alt="Bandera de @fixture.AwayTeam">
                                </div>
                                    <input type="number" id="score{@matchIndex}0" placeholder="0">
                                    <input type="number" id="score{@matchIndex}1" placeholder="0">
                            </div>
                            <!-- Resultado Real -->
                            <div class="real-score">
                                <input type="number" id="real-score1" placeholder="0" disabled>
                                <input type="number" id="real-score2" placeholder="0" disabled>
                            </div>
                    </div>
                }
            }
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <NoAuthorizedComponent></NoAuthorizedComponent>
    </NotAuthorized>
</AuthorizeView>

@code {

    private IEnumerable<FixtureViewModel> fixtures;

    private async Task LoadFixtures()
    {
        fixtures = await fixturesApiService.GetFixtures();
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadFixtures();
    }
}